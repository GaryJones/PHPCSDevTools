name: Quicktest

on:
  # Run on pushes, including merges, to all branches except `stable`.
  push:
    branches-ignore:
      - stable
  # Allow manually triggering the workflow.
  workflow_dispatch:

jobs:
  #### QUICK TEST STAGE ####
  # This is a much quicker test which only runs the unit tests and linting against the low/high
  # supported PHP/PHPCS combinations.
  quicktest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php: ['5.4', 'latest']
        phpcs_version: ['dev-master']
        lint: [true]

        include:
          - php: '7.2'
            phpcs_version: '3.1.0'
            lint: false
          - php: '5.4'
            phpcs_version: '3.1.0'
            lint: false

    name: "QTest${{ matrix.lint && ' + Lint' || '' }}: PHP ${{ matrix.php }} - PHPCS ${{ matrix.phpcs_version }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # On stable PHPCS versions, allow for PHP deprecation notices.
      # Unit tests don't need to fail on those for stable releases where those issues won't get fixed anymore.
      - name: Setup ini config
        id: set_ini
        run: |
          if [ "${{ matrix.phpcs_version }}" != "dev-master" ]; then
            echo '::set-output name=PHP_INI::error_reporting=E_ALL & ~E_DEPRECATED, display_errors=On'
          else
            echo '::set-output name=PHP_INI::error_reporting=E_ALL, display_errors=On'
          fi

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          ini-values: ${{ steps.set_ini.outputs.PHP_INI }}
          coverage: none

      - name: 'Composer: adjust dependencies'
        run: |
          # Set the PHPCS version to be used in the tests.
          composer require --no-update squizlabs/php_codesniffer:"${{ matrix.phpcs_version }}" --no-scripts
          # Remove the PHPCSDevCS dependency as it has different PHPCS requirements and would block installs.
          composer remove --no-update --dev phpcsstandards/phpcsdevcs --no-scripts

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: "ramsey/composer-install@v1"

      - name: Lint against parse errors
        if: ${{ matrix.lint }}
        run: composer lint

      # Check that any sniffs available are feature complete.
      # This also acts as an integration test for the feature completeness script,
      # which is why it is run against various PHP versions and not in the "Sniff" stage.
      - name: Check for feature completeness
        if: ${{ matrix.lint }}
        run: composer check-complete

      - name: Run the unit tests
        run: composer run-tests
